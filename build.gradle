plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

fabricApi {
	configureDataGeneration() {
		client = true
		modId = "spellslabextra"
	}
}

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = 'https://maven.kosmx.dev/' }
	maven { url = 'https://maven.shedaniel.me/' }
	maven {
		name = 'Modrinth'
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	// Fabric
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Dependencies

	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("dev.emi:trinkets:${project.trinkets_version}")
	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")
	include(modImplementation("maven.modrinth:ranged-weapon-api:${project.ranged_weapon_api_version}"))
	implementation include("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")

	//modImplementation("maven.modrinth:archers:${project.archers_version}-fabric")
	//modImplementation("maven.modrinth:paladins-and-priests:${project.paladins_version}-fabric")
	//modImplementation("maven.modrinth:wizards:${project.wizards_version}-fabric")

	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixin_extras_version}")))

	//    modImplementation(files("run/mods/dev/spell_engine-${project.spell_engine_version}.jar"))
	//    modImplementation(files("run/mods/dev/spell_power-fabric-${project.spell_power_version}.jar"))
	//    modImplementation(files("run/mods/dev/runes-fabric-${project.runes_version}.jar"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}